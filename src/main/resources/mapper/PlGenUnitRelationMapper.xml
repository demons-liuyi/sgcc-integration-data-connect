<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sgcc.mapper.PlGenUnitRelationMapper" >
  <resultMap id="BaseResultMap" type="com.sgcc.po.PlGenUnitRelation" >
    <id column="RELATION_ID" property="relationId" jdbcType="VARCHAR" />
    <result column="ECO_UNIT_ID" property="ecoUnitId" jdbcType="VARCHAR" />
    <result column="UNIT_ID" property="unitId" jdbcType="VARCHAR" />
    <result column="START_TIME" property="startTime" jdbcType="VARCHAR" />
    <result column="END_TIME" property="endTime" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="VARCHAR" />
    <result column="UPDATE_USER_ID" property="updateUserId" jdbcType="VARCHAR" />
    <result column="DATA_STATUS" property="dataStatus" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    RELATION_ID, ECO_UNIT_ID, UNIT_ID, START_TIME, END_TIME, UPDATE_TIME, UPDATE_USER_ID, 
    DATA_STATUS
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sgcc.po.PlGenUnitRelationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pl_gen_unit_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from pl_gen_unit_relation
    where RELATION_ID = #{relationId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from pl_gen_unit_relation
    where RELATION_ID = #{relationId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sgcc.po.PlGenUnitRelationExample" >
    delete from pl_gen_unit_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sgcc.po.PlGenUnitRelation" >
    insert into pl_gen_unit_relation (RELATION_ID, ECO_UNIT_ID, UNIT_ID, 
      START_TIME, END_TIME, UPDATE_TIME, 
      UPDATE_USER_ID, DATA_STATUS)
    values (#{relationId,jdbcType=VARCHAR}, #{ecoUnitId,jdbcType=VARCHAR}, #{unitId,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, 
      #{updateUserId,jdbcType=VARCHAR}, #{dataStatus,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sgcc.po.PlGenUnitRelation" >
    insert into pl_gen_unit_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="relationId != null" >
        RELATION_ID,
      </if>
      <if test="ecoUnitId != null" >
        ECO_UNIT_ID,
      </if>
      <if test="unitId != null" >
        UNIT_ID,
      </if>
      <if test="startTime != null" >
        START_TIME,
      </if>
      <if test="endTime != null" >
        END_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="updateUserId != null" >
        UPDATE_USER_ID,
      </if>
      <if test="dataStatus != null" >
        DATA_STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="relationId != null" >
        #{relationId,jdbcType=VARCHAR},
      </if>
      <if test="ecoUnitId != null" >
        #{ecoUnitId,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null" >
        #{unitId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="dataStatus != null" >
        #{dataStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sgcc.po.PlGenUnitRelationExample" resultType="java.lang.Integer" >
    select count(*) from pl_gen_unit_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pl_gen_unit_relation
    <set >
      <if test="record.relationId != null" >
        RELATION_ID = #{record.relationId,jdbcType=VARCHAR},
      </if>
      <if test="record.ecoUnitId != null" >
        ECO_UNIT_ID = #{record.ecoUnitId,jdbcType=VARCHAR},
      </if>
      <if test="record.unitId != null" >
        UNIT_ID = #{record.unitId,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null" >
        START_TIME = #{record.startTime,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null" >
        END_TIME = #{record.endTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUserId != null" >
        UPDATE_USER_ID = #{record.updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.dataStatus != null" >
        DATA_STATUS = #{record.dataStatus,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pl_gen_unit_relation
    set RELATION_ID = #{record.relationId,jdbcType=VARCHAR},
      ECO_UNIT_ID = #{record.ecoUnitId,jdbcType=VARCHAR},
      UNIT_ID = #{record.unitId,jdbcType=VARCHAR},
      START_TIME = #{record.startTime,jdbcType=VARCHAR},
      END_TIME = #{record.endTime,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=VARCHAR},
      UPDATE_USER_ID = #{record.updateUserId,jdbcType=VARCHAR},
      DATA_STATUS = #{record.dataStatus,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sgcc.po.PlGenUnitRelation" >
    update pl_gen_unit_relation
    <set >
      <if test="ecoUnitId != null" >
        ECO_UNIT_ID = #{ecoUnitId,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null" >
        UNIT_ID = #{unitId,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        START_TIME = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        END_TIME = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null" >
        UPDATE_USER_ID = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="dataStatus != null" >
        DATA_STATUS = #{dataStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where RELATION_ID = #{relationId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sgcc.po.PlGenUnitRelation" >
    update pl_gen_unit_relation
    set ECO_UNIT_ID = #{ecoUnitId,jdbcType=VARCHAR},
      UNIT_ID = #{unitId,jdbcType=VARCHAR},
      START_TIME = #{startTime,jdbcType=VARCHAR},
      END_TIME = #{endTime,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=VARCHAR},
      UPDATE_USER_ID = #{updateUserId,jdbcType=VARCHAR},
      DATA_STATUS = #{dataStatus,jdbcType=VARCHAR}
    where RELATION_ID = #{relationId,jdbcType=VARCHAR}
  </update>
</mapper>